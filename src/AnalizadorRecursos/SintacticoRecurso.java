
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Sat Dec 28 17:28:10 CST 2013
//----------------------------------------------------

package AnalizadorRecursos;

import java_cup.runtime.*;
import Almacenamiento.*;
import Clases.*;
import java.util.ArrayList;

/** CUP v0.10k generated parser.
  * @version Sat Dec 28 17:28:10 CST 2013
  */
public class SintacticoRecurso extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public SintacticoRecurso() {super();}

  /** Constructor which sets the default scanner. */
  public SintacticoRecurso(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\065\000\002\002\004\000\002\003\003\000\002\022" +
    "\002\000\002\004\005\000\002\023\002\000\002\004\005" +
    "\000\002\024\002\000\002\004\005\000\002\025\002\000" +
    "\002\004\005\000\002\026\002\000\002\004\005\000\002" +
    "\004\003\000\002\004\003\000\002\004\003\000\002\004" +
    "\003\000\002\004\003\000\002\027\002\000\002\004\006" +
    "\000\002\030\002\000\002\005\010\000\002\031\002\000" +
    "\002\006\011\000\002\032\002\000\002\007\011\000\002" +
    "\033\002\000\002\010\011\000\002\020\004\000\002\020" +
    "\004\000\002\020\003\000\002\020\003\000\002\021\004" +
    "\000\002\021\004\000\002\021\004\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\017\004\000\002" +
    "\017\004\000\002\034\002\000\002\011\010\000\002\035" +
    "\002\000\002\011\010\000\002\036\002\000\002\011\010" +
    "\000\002\037\002\000\002\011\010\000\002\012\005\000" +
    "\002\013\005\000\002\015\005\000\002\014\005\000\002" +
    "\016\003\000\002\016\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\146\000\024\003\017\004\006\005\010\006\011\012" +
    "\005\016\015\017\021\020\020\021\016\001\002\000\026" +
    "\002\ufff4\003\ufffd\004\ufffd\005\ufffd\006\ufffd\012\ufffd\016" +
    "\ufffd\017\ufffd\020\ufffd\021\ufffd\001\002\000\004\024\130" +
    "\001\002\000\004\024\123\001\002\000\004\002\122\001" +
    "\002\000\004\024\110\001\002\000\004\024\066\001\002" +
    "\000\004\002\000\001\002\000\026\002\ufff5\003\uffff\004" +
    "\uffff\005\uffff\006\uffff\012\uffff\016\uffff\017\uffff\020\uffff" +
    "\021\uffff\001\002\000\026\002\ufff2\003\ufff9\004\ufff9\005" +
    "\ufff9\006\ufff9\012\ufff9\016\ufff9\017\ufff9\020\ufff9\021\ufff9" +
    "\001\002\000\004\024\055\001\002\000\004\024\050\001" +
    "\002\000\004\026\045\001\002\000\004\024\040\001\002" +
    "\000\004\024\030\001\002\000\026\002\ufff1\003\ufff7\004" +
    "\ufff7\005\ufff7\006\ufff7\012\ufff7\016\ufff7\017\ufff7\020\ufff7" +
    "\021\ufff7\001\002\000\026\002\ufff3\003\ufffb\004\ufffb\005" +
    "\ufffb\006\ufffb\012\ufffb\016\ufffb\017\ufffb\020\ufffb\021\ufffb" +
    "\001\002\000\024\003\017\004\006\005\010\006\011\012" +
    "\005\016\015\017\021\020\020\021\016\001\002\000\004" +
    "\002\ufffa\001\002\000\024\003\017\004\006\005\010\006" +
    "\011\012\005\016\015\017\021\020\020\021\016\001\002" +
    "\000\004\002\ufff6\001\002\000\004\025\031\001\002\000" +
    "\004\007\032\001\002\000\004\024\036\001\002\000\004" +
    "\026\uffda\001\002\000\004\026\035\001\002\000\026\002" +
    "\uffd9\003\uffd9\004\uffd9\005\uffd9\006\uffd9\012\uffd9\016\uffd9" +
    "\017\uffd9\020\uffd9\021\uffd9\001\002\000\004\023\037\001" +
    "\002\000\014\007\uffd2\010\uffd2\011\uffd2\013\uffd2\026\uffd2" +
    "\001\002\000\004\025\041\001\002\000\004\007\032\001" +
    "\002\000\004\026\uffd8\001\002\000\004\026\044\001\002" +
    "\000\026\002\uffd7\003\uffd7\004\uffd7\005\uffd7\006\uffd7\012" +
    "\uffd7\016\uffd7\017\uffd7\020\uffd7\021\uffd7\001\002\000\024" +
    "\003\ufff0\004\ufff0\005\ufff0\006\ufff0\012\ufff0\016\ufff0\017" +
    "\ufff0\020\ufff0\021\ufff0\001\002\000\024\003\017\004\006" +
    "\005\010\006\011\012\005\016\015\017\021\020\020\021" +
    "\016\001\002\000\004\002\uffef\001\002\000\004\025\051" +
    "\001\002\000\004\007\032\001\002\000\004\026\uffd4\001" +
    "\002\000\004\026\054\001\002\000\026\002\uffd3\003\uffd3" +
    "\004\uffd3\005\uffd3\006\uffd3\012\uffd3\016\uffd3\017\uffd3\020" +
    "\uffd3\021\uffd3\001\002\000\004\025\056\001\002\000\004" +
    "\007\032\001\002\000\004\026\uffd6\001\002\000\004\026" +
    "\061\001\002\000\026\002\uffd5\003\uffd5\004\uffd5\005\uffd5" +
    "\006\uffd5\012\uffd5\016\uffd5\017\uffd5\020\uffd5\021\uffd5\001" +
    "\002\000\024\003\017\004\006\005\010\006\011\012\005" +
    "\016\015\017\021\020\020\021\016\001\002\000\004\002" +
    "\ufff8\001\002\000\024\003\017\004\006\005\010\006\011" +
    "\012\005\016\015\017\021\020\020\021\016\001\002\000" +
    "\004\002\ufffe\001\002\000\004\030\067\001\002\000\004" +
    "\025\070\001\002\000\010\007\032\010\075\011\076\001" +
    "\002\000\012\007\uffdf\010\uffdf\011\uffdf\026\uffdf\001\002" +
    "\000\012\007\uffdd\010\uffdd\011\uffdd\026\uffdd\001\002\000" +
    "\012\007\uffde\010\uffde\011\uffde\026\uffde\001\002\000\012" +
    "\007\032\010\075\011\076\026\uffea\001\002\000\004\024" +
    "\101\001\002\000\004\024\077\001\002\000\004\030\100" +
    "\001\002\000\012\007\uffd1\010\uffd1\011\uffd1\026\uffd1\001" +
    "\002\000\004\022\102\001\002\000\012\007\uffd0\010\uffd0" +
    "\011\uffd0\026\uffd0\001\002\000\012\007\uffe2\010\uffe2\011" +
    "\uffe2\026\uffe2\001\002\000\012\007\uffe0\010\uffe0\011\uffe0" +
    "\026\uffe0\001\002\000\004\026\107\001\002\000\012\007" +
    "\uffe1\010\uffe1\011\uffe1\026\uffe1\001\002\000\026\002\uffe9" +
    "\003\uffe9\004\uffe9\005\uffe9\006\uffe9\012\uffe9\016\uffe9\017" +
    "\uffe9\020\uffe9\021\uffe9\001\002\000\004\030\111\001\002" +
    "\000\004\025\112\001\002\000\006\007\032\010\075\001" +
    "\002\000\010\007\uffe4\010\uffe4\026\uffe4\001\002\000\010" +
    "\007\uffe3\010\uffe3\026\uffe3\001\002\000\010\007\032\010" +
    "\075\026\uffec\001\002\000\010\007\uffe6\010\uffe6\026\uffe6" +
    "\001\002\000\010\007\uffe5\010\uffe5\026\uffe5\001\002\000" +
    "\004\026\121\001\002\000\026\002\uffeb\003\uffeb\004\uffeb" +
    "\005\uffeb\006\uffeb\012\uffeb\016\uffeb\017\uffeb\020\uffeb\021" +
    "\uffeb\001\002\000\004\002\001\001\002\000\004\025\124" +
    "\001\002\000\004\007\032\001\002\000\004\026\uffee\001" +
    "\002\000\004\026\127\001\002\000\026\002\uffed\003\uffed" +
    "\004\uffed\005\uffed\006\uffed\012\uffed\016\uffed\017\uffed\020" +
    "\uffed\021\uffed\001\002\000\004\030\131\001\002\000\004" +
    "\025\132\001\002\000\006\007\032\013\135\001\002\000" +
    "\004\007\032\001\002\000\004\026\uffe8\001\002\000\004" +
    "\024\140\001\002\000\004\013\135\001\002\000\004\026" +
    "\uffdc\001\002\000\006\014\142\015\143\001\002\000\006" +
    "\007\uffcf\026\uffcf\001\002\000\006\007\uffce\026\uffce\001" +
    "\002\000\006\007\uffcd\026\uffcd\001\002\000\004\026\145" +
    "\001\002\000\026\002\uffe7\003\uffe7\004\uffe7\005\uffe7\006" +
    "\uffe7\012\uffe7\016\uffe7\017\uffe7\020\uffe7\021\uffe7\001\002" +
    "\000\004\026\uffdb\001\002\000\024\003\017\004\006\005" +
    "\010\006\011\012\005\016\015\017\021\020\020\021\016" +
    "\001\002\000\004\002\ufffc\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\146\000\020\003\006\004\011\005\012\006\003\007" +
    "\022\010\013\011\021\001\001\000\004\023\146\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\022\063\001\001\000\004\025\061\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\025\001\001\000\004\024" +
    "\023\001\001\000\016\004\024\005\012\006\003\007\022" +
    "\010\013\011\021\001\001\000\002\001\001\000\016\004" +
    "\026\005\012\006\003\007\022\010\013\011\021\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\012\032\001" +
    "\001\000\002\001\001\000\004\034\033\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\012\041\001\001\000\004" +
    "\035\042\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\045\001\001\000\016\004\046\005\012\006\003" +
    "\007\022\010\013\011\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\012\051\001\001\000\004\037\052" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\056\001\001\000\004\036\057\001\001" +
    "\000\002\001\001\000\002\001\001\000\016\004\062\005" +
    "\012\006\003\007\022\010\013\011\021\001\001\000\002" +
    "\001\001\000\016\004\064\005\012\006\003\007\022\010" +
    "\013\011\021\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\012\070\013\072\015\071\021" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\102\013\105\015\103\032\104\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\112\015\113\020\114\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\012\115\015\116\031" +
    "\117\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\012\124\001\001\000\004\030\125\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\012\135\014\132\017\133\001\001" +
    "\000\004\012\145\001\001\000\004\033\143\001\001\000" +
    "\002\001\001\000\004\014\136\001\001\000\002\001\001" +
    "\000\004\016\140\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\004\147\005\012\006\003\007" +
    "\022\010\013\011\021\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$SintacticoRecurso$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$SintacticoRecurso$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SintacticoRecurso$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



	private boolean primeroHeroe, primeroEnemigo = false;
	private ArrayList<ErrorSintactico> listaErrores = new ArrayList<ErrorSintactico>();
	private ArrayList<Variable> listaVariables = new ArrayList<Variable>();
	private ArrayList<Metodo> listaMetodos = null;
		
	public void ingresarErrorSintactico(String lexema,int fila,int columna,String descripcion){
		listaErrores.add(new ErrorSintactico(lexema,fila,columna,descripcion));
	}
	
	public boolean ingresoVariable(String identificador, String tipo, int fila, int columna){
		if(!existeVariable(identificador)){
			listaVariables.add(new Variable(identificador, tipo));
			return true;
		}
		else{
			ingresarErrorSintactico(identificador,fila,columna,"Error Semantico, Variable ya existe archivo Recursos.rr");
			return false;
		}
	}
			
	private boolean existeVariable(String identificador){
		for(int i=0;i<listaVariables.size();i++){
			if(listaVariables.get(i).getIdentificador().toLowerCase().equals(identificador.toLowerCase())){
				return true;
			}
		}
		return false;
	}
	
	public Variable getVariable(String identificador){
		if(existeVariable(identificador)){
			for(int i=0;i<listaVariables.size();i++){
				if(listaVariables.get(i).getIdentificador().toLowerCase().equals(identificador.toLowerCase())){
					return listaVariables.get(i);
				}
			}
			return null;
		}
		else{
			return null;
		}
	}
	
	public void setListaMetodos(ArrayList<Metodo> listaMetodos){
		this.listaMetodos = listaMetodos;
	}
	
	public boolean existeMetodo(String identificador){
		if(listaMetodos!=null){
			for(int i = 0; i<listaMetodos.size();i++){
				if(listaMetodos.get(i).getIdentificador().toLowerCase().equals(identificador.toLowerCase())){
					return true;
				}
			}
			return false;
		}
		return false;
	}
	
	public ArrayList<ErrorSintactico> getListaErrores(){
		return listaErrores;
	}
	
	public ArrayList<Variable> getListaVariables(){
		return listaVariables;
	}
		
    /**Metodo al que se llama automticamente ante algun error sintactico.*/
    public void syntax_error(Symbol s){
        try{
			System.out.println("Error Sintactico. Línea: " + s.right + ", Columna: " + s.left + ". Identificador " + s.value + " no reconocido.");
			ingresarErrorSintactico(s.value.toString(),s.right,s.left,"Error Sintactico, archivo Recursos.rr");
		}
		catch(Exception e){
			System.out.println(e);
		}
	}
    /**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
        try{
			System.out.println("Error Sintactico Irrecuperable. Linea: " + s.right+ ", Columna: "+s.left+". Identificador " + s.value + " no reconocido.");
			ingresarErrorSintactico("FIN ARCHIVO",0,0,"Error Sintactico Irrecuperable, Se llego al fin de archivo sin lograr recuperacion, archivo Recursos.rr");
		}
		catch(Exception e){
			System.out.println(e);
		}
	}
	
	public void setPrimeroHeroe(boolean cambio){
		primeroHeroe = cambio;
	}
	
	public void setPrimeroEnemigo(boolean cambio){
		primeroEnemigo = cambio;
	}
	
	public boolean getPrimeroHeroe(){
		return primeroHeroe;
	}
	
	public boolean getPrimeroEnemigo(){
		return primeroEnemigo;
	}
	

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$SintacticoRecurso$actions {


	
	
	private boolean ingresoVariable(String identificador, String tipo, int fila, int columna){
		return parser.ingresoVariable(identificador,tipo,fila,columna);
	}
	
	private Variable getVariable(String identificador){
		return parser.getVariable(identificador);
	}
	
	private void ingresarErrorSintactico(String lexema,int fila,int columna,String descripcion){
		parser.ingresarErrorSintactico(lexema,fila,columna,descripcion);
	}
	
	public void muestra(String s){
		System.out.println(s);
	}
	
	public boolean existeMetodo(String identificador){
		return parser.existeMetodo(identificador);
	}
	
	private void setPrimeroHeroe(){
		parser.setPrimeroHeroe(true);
	}
	
	private void setPrimeroEnemigo(){
		parser.setPrimeroEnemigo(true);
	}

  private final SintacticoRecurso parser;

  /** Constructor */
  CUP$SintacticoRecurso$actions(SintacticoRecurso parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$SintacticoRecurso$do_action(
    int                        CUP$SintacticoRecurso$act_num,
    java_cup.runtime.lr_parser CUP$SintacticoRecurso$parser,
    java.util.Stack            CUP$SintacticoRecurso$stack,
    int                        CUP$SintacticoRecurso$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SintacticoRecurso$result;

      /* select the action based on the action number */
      switch (CUP$SintacticoRecurso$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // OPCION ::= f 
            {
              String RESULT = null;
			
						RESULT = "f";
					
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(12/*OPCION*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // OPCION ::= v 
            {
              String RESULT = null;
			
						RESULT = "v"; 
					
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(12/*OPCION*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // DESTRUCCION ::= dest dosPuntos OPCION 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
							RESULT = a.toString(); 
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(10/*DESTRUCCION*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CORAZONES ::= corazones dosPuntos entero 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
							RESULT = a.toString();
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(11/*CORAZONES*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ALGORITMO ::= algoritmo dosPuntos identificador 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
							RESULT = a.toString();
							if(!existeMetodo(a.toString())){
								ingresarErrorSintactico(a.toString(),aright,aleft,"Error Semantico, El metodo no ha sido declarado en inteligencia, Archivo Recursos.rr");
							}
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(9/*ALGORITMO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // IMAGEN ::= img dosPuntos ruta 
            {
              String RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
							RESULT = a.toString(); 
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(8/*IMAGEN*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // POWERUP ::= corazon dosPuntos llaveAbre IMAGEN NT$13 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$13
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(7/*POWERUP*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // NT$13 ::= 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;

							boolean ingreso = ingresoVariable("corazon","corazon",aright,aleft);
							Variable variable = getVariable("corazon");
							if(variable!=null&&ingreso){ 
								variable.setRuta(b);
							}
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(29/*NT$13*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // POWERUP ::= bombar dosPuntos llaveAbre IMAGEN NT$12 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$12
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(7/*POWERUP*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // NT$12 ::= 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
							boolean ingreso = ingresoVariable("bombar","bombar",aright,aleft); 
							Variable variable = getVariable("bombar"); 
							if(variable!=null&&ingreso){ 
								variable.setRuta(b);
							}
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(28/*NT$12*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // POWERUP ::= bomba dosPuntos llaveAbre IMAGEN NT$11 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$11
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(7/*POWERUP*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // NT$11 ::= 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
							boolean ingreso = ingresoVariable("bomba","bomba",aright,aleft); 
							Variable variable = getVariable("bomba"); 
							if(variable!=null&&ingreso){ 
								variable.setRuta(b);
							}
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(27/*NT$11*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // POWERUP ::= fuego dosPuntos llaveAbre IMAGEN NT$10 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$10
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(7/*POWERUP*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // NT$10 ::= 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
							boolean ingreso = ingresoVariable("fuego","fuego",aright,aleft); 
							Variable variable = getVariable("fuego");
							if(variable!=null&&ingreso){ 
								variable.setRuta(b);
							}
						
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(26/*NT$10*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // PROPIEDADESOBSTACULO ::= DESTRUCCION IMAGEN 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[2]; 
									arreglo[0] = b.toString(); 
									arreglo[1] = a.toString(); 
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(13/*PROPIEDADESOBSTACULO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // PROPIEDADESOBSTACULO ::= IMAGEN DESTRUCCION 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[2];
									arreglo[0] = a.toString();
									arreglo[1] = b.toString();
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(13/*PROPIEDADESOBSTACULO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // PROPIEDADESENEMIGO ::= CORAZONES 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
		
									String[] arreglo = new String[3];
									arreglo[1] = a.toString();
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // PROPIEDADESENEMIGO ::= ALGORITMO 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[3];
									arreglo[2] = a.toString();
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // PROPIEDADESENEMIGO ::= IMAGEN 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[3];
									arreglo[0] = a.toString();	
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // PROPIEDADESENEMIGO ::= PROPIEDADESENEMIGO CORAZONES 
            {
              String[] RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo;
									if(b!=null){
										arreglo = b;
									}
									else{
										arreglo = new String[3];
									}
									if(arreglo[1]==null){
										arreglo[1] = a.toString();
									}
									else{
										ingresarErrorSintactico(a.toString(),aright,aleft,"Error Semantico, Atributo corazones ya existe, archivo Recursos.rr");
									}
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // PROPIEDADESENEMIGO ::= PROPIEDADESENEMIGO ALGORITMO 
            {
              String[] RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo;
									if(b!=null){
										arreglo = b;
									} 
									else{
										arreglo = new String[3];
									}
									if(arreglo[2]==null){
										arreglo[2] = a.toString();
									}
									else{
										ingresarErrorSintactico(a.toString(),aright,aleft,"Error Semantico, Atributo algoritmo ya existe, archivo Recursos.rr");
									}
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // PROPIEDADESENEMIGO ::= PROPIEDADESENEMIGO IMAGEN 
            {
              String[] RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo; 
									if(b!=null){
										arreglo = b;
									}
									else{
										arreglo = new String[3];
									} 
									if(arreglo[0]==null){
										arreglo[0] = a.toString();
									} 
									else{
										ingresarErrorSintactico(a.toString(),aright,aleft,"Error Semantico, Atributo img ya existe, archivo Recursos.rr");
									}
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(15/*PROPIEDADESENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // PROPIEDADESHEROE ::= CORAZONES 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[2];
									arreglo[1] = a.toString();	
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(14/*PROPIEDADESHEROE*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // PROPIEDADESHEROE ::= IMAGEN 
            {
              String[] RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo = new String[2]; 
									arreglo[0] = a.toString();	
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(14/*PROPIEDADESHEROE*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // PROPIEDADESHEROE ::= PROPIEDADESHEROE CORAZONES 
            {
              String[] RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo; 
									if(b!=null){
										arreglo = b;
									}
									else{
										arreglo = new String[2];
									} 
									if(arreglo[1]==null){
										arreglo[1] = a.toString();
									} 
									else{
										ingresarErrorSintactico("corazones",aright,aleft,"Error Semantico, Atributo corazones ya existe, archivo Recursos.rr");
									}	
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(14/*PROPIEDADESHEROE*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // PROPIEDADESHEROE ::= PROPIEDADESHEROE IMAGEN 
            {
              String[] RESULT = null;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
			
									String[] arreglo; 
									if(b!=null){
										arreglo = b;
									}
									else{
										arreglo = new String[2];
									} 
									if(arreglo[0]==null){
										arreglo[0] = a.toString();
									}
									else{
										ingresarErrorSintactico("img",aright,aleft,"Error Semantico, Atributo img ya existe, archivo Recursos.rr");
									}	
									RESULT = arreglo;
								
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(14/*PROPIEDADESHEROE*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // OBSTACULO ::= obstaculo dosPuntos identificador llaveAbre PROPIEDADESOBSTACULO NT$9 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$9
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(6/*OBSTACULO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-6)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // NT$9 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
								boolean ingreso = ingresoVariable(id,"obstaculo",idright,idleft); 
								Variable variable = getVariable(id); 
								if(variable!=null&&ingreso){ 
									variable.setRuta(b[0]); 
									variable.setDestruible(b[1]);
								} 
							
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(25/*NT$9*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ENEMIGO ::= enemigo dosPuntos identificador llaveAbre PROPIEDADESENEMIGO NT$8 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$8
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(5/*ENEMIGO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-6)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // NT$8 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
								setPrimeroEnemigo();
								boolean ingreso = ingresoVariable(id,"enemigo",idright,idleft); 
								Variable variable = getVariable(id); 
								if(variable!=null&&ingreso){ 
									variable.setRuta(b[0]); 
									if(b[1]!=null){
										variable.setCorazones(b[1]);
									}
									else{
										variable.setCorazones("1");
									} 
									variable.setAlgoritmo(b[2]);
								}
							
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(24/*NT$8*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // HEROE ::= heroe dosPuntos identificador llaveAbre PROPIEDADESHEROE NT$7 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$7
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-4)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(4/*HEROE*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-6)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // NT$7 ::= 
            {
              Object RESULT = null;
		int idleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String[] b = (String[])((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 
								setPrimeroHeroe();
								boolean ingreso = ingresoVariable(id,"heroe",idright,idleft); 
								Variable variable = getVariable(id); 
								if(variable!=null&&ingreso){ 
									variable.setRuta(b[0]); 
									if(b[1]!=null){
										variable.setCorazones(b[1]);
									}
									else{
										variable.setCorazones("3");
									}
								}
							
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(23/*NT$7*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // ESCENARIO ::= escenario dosPuntos llaveAbre IMAGEN NT$6 llaveCierre 
            {
              Object RESULT = null;
              // propagate RESULT from NT$6
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(3/*ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-5)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // NT$6 ::= 
            {
              Object RESULT = null;
		int aleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right;
		String b = (String)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).value;
 	
								boolean ingreso = ingresoVariable("escenario","escenario",aright,aleft); 
								Variable variable = getVariable("escenario"); 
								if(variable!=null&&ingreso){ 
									variable.setRuta(b);
								}
							
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(22/*NT$6*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CUERPO ::= error llaveCierre NT$5 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$5
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-3)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // NT$5 ::= 
            {
              Object RESULT = null;
muestra("-----------------------------------------BLOQUE CON ERRORES SINTACTICOS-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(21/*NT$5*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CUERPO ::= POWERUP 
            {
              Object RESULT = null;
		muestra("FIN POWERUP-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUERPO ::= OBSTACULO 
            {
              Object RESULT = null;
		muestra("FIN OBSTACULO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUERPO ::= ENEMIGO 
            {
              Object RESULT = null;
		muestra("FIN ENEMIGO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CUERPO ::= HEROE 
            {
              Object RESULT = null;
		muestra("FIN HEROE-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CUERPO ::= ESCENARIO 
            {
              Object RESULT = null;
		muestra("FIN ESCENARIO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CUERPO ::= POWERUP NT$4 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$4
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // NT$4 ::= 
            {
              Object RESULT = null;
muestra("FIN POWERUP-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(20/*NT$4*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CUERPO ::= OBSTACULO NT$3 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$3
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // NT$3 ::= 
            {
              Object RESULT = null;
muestra("FIN OBSTACULO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(19/*NT$3*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CUERPO ::= ENEMIGO NT$2 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$2
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // NT$2 ::= 
            {
              Object RESULT = null;
muestra("FIN ENEMIGO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(18/*NT$2*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // CUERPO ::= HEROE NT$1 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$1
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // NT$1 ::= 
            {
              Object RESULT = null;
muestra("FIN HEROE-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(17/*NT$1*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // CUERPO ::= ESCENARIO NT$0 CUERPO 
            {
              Object RESULT = null;
              // propagate RESULT from NT$0
              if ( ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value != null )
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(2/*CUERPO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-2)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$0 ::= 
            {
              Object RESULT = null;
muestra("FIN ESCENARIO-----------------------------------------");
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(16/*NT$0*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= CUERPO 
            {
              Object RESULT = null;

              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(1/*INICIO*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          return CUP$SintacticoRecurso$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).value;
		RESULT = start_val;
              CUP$SintacticoRecurso$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-1)).left, ((java_cup.runtime.Symbol)CUP$SintacticoRecurso$stack.elementAt(CUP$SintacticoRecurso$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$SintacticoRecurso$parser.done_parsing();
          return CUP$SintacticoRecurso$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

